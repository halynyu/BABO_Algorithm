"""

예제 3-1. 거스름돈

당신은 음식점의 계산을 도와주는 점원이다. 
카운터에는 거스름돈으로 사용할 500원, 100원, 50원, 10원짜리 동전이 무한히 존재한다고 가정한다.
손님에게 거슬러 줘야 할 돈이 N원일 때 거슬러 줘야 할 동전의 최소 개수를 구하라. 
단, 거슬러 줘야 할 돈 N은 항상 10의 배수이다.

"""

"""

문제 해결
- 거슬러 줘야 할 동전의 최소 개수 -> 가장 큰 단위의 화폐부터 거스름돈으로 지급한다.

"""

# 거스름돈을 입력받음
n = int(input())
# 거슬러 줄 동전의 수
count = 0

# 큰 단위의 화폐부터 차례대로 확인
coin_types = [500, 100, 50, 10]

for coin in coin_types:
    count += n // coin  # 해당 화폐로 거슬러 줄 수 잇는 동전의 개수 세기
    n %= coin           # 남은 화폐 계산하여 더 작은 단위의 화폐로 반복


print(count)


"""

그리디 알고리즘으로 풀 수 있는 이유?

가지고 있는 동전 중에서 큰 단위가 항상 작은 단위의 배수이므로,
작은 단위의 동전들을 종합해 다른 해가 나올 수 없기 때문

"""